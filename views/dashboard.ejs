<%- include("partials/header") %> <%- include("partials/navbar") %>

<div class="content">
  <!-- Page title -->
  <h2 class="mb-2 lh-sm">Admin Dashboard</h2>
  <p class="text-700 lead mb-5">
    Check all the report progression here
  </p>

  <div class="px-3 mb-5">
    <div class="row justify-content-between">
      <div class="col-6 col-md-4 col-xxl-2 text-center border-translucent border-start-xxl border-end-xxl-0 border-bottom-xxl border-top-xxl border-end border-bottom pb-4 py-xxl-3 "><span class="uil fs-5 lh-1 uil-file-alt text-primary"></span>
        <h1 class="fs-5 pt-3"><%= patrolReport.length + caseReport.length %></h1>
        <p class="fs-9 mb-0">Total Reports</p>
      </div>
      <div class="col-6 col-md-4 col-xxl-2 text-center border-translucent border-start-xxl border-end-xxl-0 border-bottom-xxl border-top-xxl border-end-md border-bottom pb-4 pb-xxl-0 py-xxl-3"><span class="uil fs-5 lh-1 uil-file-export text-info"></span>
        <h1 class="fs-5 pt-3"><%= dutyHandover.length %></h1>
        <p class="fs-9 mb-0">Duty Handover</p>
      </div>
      <div class="col-6 col-md-4 col-xxl-2 text-center border-translucent border-start-xxl border-bottom-xxl border-top-xxl border-bottom border-end border-end-md-0 pb-4 pb-xxl-0 pt-4 pt-md-0 py-xxl-3"><span class="uil fs-5 lh-1 uil-user text-primary"></span>
        <h1 class="fs-5 pt-3"><%= user.length %></h1>
        <p class="fs-9 mb-0">Total Staffs</p>
      </div>
      <div class="col-6 col-md-4 col-xxl-2 text-center border-translucent border-start-xxl border-end-md border-end-xxl-0 border-bottom border-bottom-xxl border-top-xxl pb-4 pt-4 py-xxl-3"><span class="uil fs-5 lh-1 uil-book text-info"></span>
        <h1 class="fs-5 pt-3"><%= shiftMember.length %></h1>
        <p class="fs-9 mb-0">Shift Member Patrol</p>
      </div>
      <div class="col-6 col-md-4 col-xxl-2 text-center border-translucent border-start-xxl border-end border-end-xxl-0 border-bottom-xxl border-top-xxl pb-md-4 pt-4 py-xxl-3"><span class="uil fs-5 lh-1 uil-map-marker text-success"></span>
        <h1 class="fs-5 pt-3"><%= patrolUnit.length %></h1>
        <p class="fs-9 mb-0">Patrol Unit</p>
      </div>
      <div class="col-6 col-md-4 col-xxl-2 text-center border-translucent border-start-xxl border-end-xxl border-bottom-xxl border-top-xxl pb-md-4 pt-4 py-xxl-3"><span class="uil fs-5 lh-1 uil-clock-two text-danger"></span>
        <h1 class="fs-5 pt-3"><%= caseReport.length %></h1>
        <p class="fs-9 mb-0">Case Report</p>
      </div>
    </div>
  </div>

  <div class="row g-0 mb-5">
    <div class="col-12 col-xxl-6">
      <div class="container">
        <div id="myCarousel" class="carousel slide" data-bs-ride="carousel">

          <div class="carousel-inner">
            <div class="carousel-item active">
              <div class="row g-3 mb-5 justify-content-center">
                <div class="col-12">
                  <div class="card p-4 vh-50">
                    <div class="card-title">
                      <h3>Baitul Makmur I Patrol Activity <span class="text-700 fs-1">(<%= previousMonth %>)</span></h3>
                    </div>
                    <div class="card-body">
                      <!-- Container for ECharts chart -->
                      <div id="chartLocation1" style="width: 40vw; height: 40vh;"></div>

                      <!-- Script to render the ECharts chart -->
                      <script>
                        $(document).ready(async () => {
                          try {
                            const response = await $.getJSON('/api/averagePercentagesByWeek/baitul-makmur-i');
                            const data = response;

                            // Use ECharts to render the chart
                            const chart = echarts.init(document.getElementById('chartLocation1'));
                            const weekNumbers = data.map(entry => entry.weekNumber);
                            const averagePercentages = data.map(entry => entry.averagePercentage);

                            // Define an array of colors for each bar
                            const barColors = ['#FF5733', '#33FF57', '#5733FF', '#FF33A1'];

                            const option = {
                              xAxis: {
                                type: 'category',
                                data: weekNumbers,
                                name: 'Week',
                              },
                              yAxis: {
                                type: 'value',
                                name: 'Average Percentage',
                                axisLabel: {
                                  interval: 0,
                                  rotate: 0, // Rotate yAxis labels if needed
                                  formatter: '{value}%', // Display yAxis labels in percentage format
                                },
                                axisLine: {
                                  show: false, // Hide yAxis line
                                },
                                splitLine: {
                                  show: false, // Hide grid lines for yAxis
                                },
                              },
                              series: [{
                                data: averagePercentages,
                                type: 'bar',
                                name: 'Average Percentage',
                                itemStyle: {
                                  color: (params) => barColors[params.dataIndex % barColors.length], // Set bar colors
                                },
                                label: {
                                  show: true,
                                  position: 'inside', // Display percentage labels inside the bars
                                  formatter: (params) => params.value.toFixed(1) + '%', // Format label as rounded-off percentage
                                  textStyle: {
                                    color: 'white', // Set font color for the labels
                                  },
                                },
                              }],
                              legend: {
                                data: ['Average Percentage'],
                                align: 'left', // Align the legend to the left
                                textStyle: {
                                  color: 'white', // Change the font color of the legend
                                },
                                show: false,
                              },
                            };

                            chart.setOption(option);
                          } catch (error) {
                            console.error('Error fetching data:', error);
                          }
                        });
                      </script>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="carousel-item ">
              <div class="row g-3 mb-5 justify-content-center">
                <div class="col-12">
                  <div class="card p-4 vh-50">
                    <div class="card-title">
                      <h3>Baitul Makmur II Patrol Activity <span class="text-700 fs-1">(<%= previousMonth %>)</span></h3>
                    </div>
                    <div class="card-body">
                      <!-- Container for ECharts chart -->
                      <div id="chartLocation2" style="width: 40vw; height: 40vh;"></div>

                      <!-- Script to render the ECharts chart -->
                      <script>
                        $(document).ready(async () => {
                          try {
                            const response = await $.getJSON('/api/averagePercentagesByWeek/baitul-makmur-II');
                            const data = response;

                            // Use ECharts to render the chart
                            const chart = echarts.init(document.getElementById('chartLocation2'));
                            const weekNumbers = data.map(entry => entry.weekNumber);
                            const averagePercentages = data.map(entry => entry.averagePercentage);

                            // Define an array of colors for each bar
                            const barColors = ['#FF5733', '#33FF57', '#5733FF', '#FF33A1'];

                            const option = {
                              xAxis: {
                                type: 'category',
                                data: weekNumbers,
                                name: 'Week',
                              },
                              yAxis: {
                                type: 'value',
                                name: 'Average Percentage',
                                axisLabel: {
                                  interval: 0,
                                  rotate: 0, // Rotate yAxis labels if needed
                                  formatter: '{value}%', // Display yAxis labels in percentage format
                                },
                                axisLine: {
                                  show: false, // Hide yAxis line
                                },
                                splitLine: {
                                  show: false, // Hide grid lines for yAxis
                                },
                              },
                              series: [{
                                data: averagePercentages,
                                type: 'bar',
                                name: 'Average Percentage',
                                itemStyle: {
                                  color: (params) => barColors[params.dataIndex % barColors.length], // Set bar colors
                                },
                                label: {
                                  show: true,
                                  position: 'inside', // Display percentage labels inside the bars
                                  formatter: (params) => params.value.toFixed(1) + '%', // Format label as rounded-off percentage
                                  textStyle: {
                                    color: 'white', // Set font color for the labels
                                  },
                                },
                              }],
                              legend: {
                                data: ['Average Percentage'],
                                align: 'left', // Align the legend to the left
                                textStyle: {
                                  color: 'white', // Change the font color of the legend
                                },
                                show: false,
                              },
                            };

                            chart.setOption(option);
                          } catch (error) {
                            console.error('Error fetching data:', error);
                          }
                        });
                      </script>
                    </div>
                  </div>
                </div>
                <!-- Add more cards as needed for each item in the carousel -->
              </div>
            </div>

            <div class="carousel-item ">
              <div class="row g-3 mb-5 justify-content-center">
                <div class="col-12">
                  <div class="card p-4 vh-50">
                    <div class="card-title">
                      <h3>Jamek Mosque Patrol Activity <span class="text-700 fs-1">(<%= previousMonth %>)</span></h3>
                    </div>
                    <div class="card-body">
                      <!-- Container for ECharts chart -->
                      <div id="chartLocation3" style="width: 40vw; height: 40vh;"></div>

                      <!-- Script to render the ECharts chart -->
                      <script>
                        $(document).ready(async () => {
                          try {
                            const response = await $.getJSON('/api/averagePercentagesByWeek/jamek-mosque');
                            const data = response;

                            // Use ECharts to render the chart
                            const chart = echarts.init(document.getElementById('chartLocation3'));
                            const weekNumbers = data.map(entry => entry.weekNumber);
                            const averagePercentages = data.map(entry => entry.averagePercentage);

                            // Define an array of colors for each bar
                            const barColors = ['#FF5733', '#33FF57', '#5733FF', '#FF33A1'];

                            const option = {
                              xAxis: {
                                type: 'category',
                                data: weekNumbers,
                                name: 'Week',
                              },
                              yAxis: {
                                type: 'value',
                                name: 'Average Percentage',
                                axisLabel: {
                                  interval: 0,
                                  rotate: 0, // Rotate yAxis labels if needed
                                  formatter: '{value}%', // Display yAxis labels in percentage format
                                },
                                axisLine: {
                                  show: false, // Hide yAxis line
                                },
                                splitLine: {
                                  show: false, // Hide grid lines for yAxis
                                },
                              },
                              series: [{
                                data: averagePercentages,
                                type: 'bar',
                                name: 'Average Percentage',
                                itemStyle: {
                                  color: (params) => barColors[params.dataIndex % barColors.length], // Set bar colors
                                },
                                label: {
                                  show: true,
                                  position: 'inside', // Display percentage labels inside the bars
                                  formatter: (params) => params.value.toFixed(1) + '%', // Format label as rounded-off percentage
                                  textStyle: {
                                    color: 'white', // Set font color for the labels
                                  },
                                },
                              }],
                              legend: {
                                data: ['Average Percentage'],
                                align: 'left', // Align the legend to the left
                                textStyle: {
                                  color: 'white', // Change the font color of the legend
                                },
                                show: false,
                              },
                            };

                            chart.setOption(option);
                          } catch (error) {
                            console.error('Error fetching data:', error);
                          }
                        });
                      </script>
                    </div>
                  </div>
                </div>
                <!-- Add more cards as needed for each item in the carousel -->
              </div>
            </div>

            <div class="carousel-item ">
              <div class="row g-3 mb-5 justify-content-center">
                <div class="col-12">
                  <div class="card p-4 vh-50">
                    <div class="card-title">
                      <h3>City Mosque Patrol Activity <span class="text-700 fs-1">(<%= previousMonth %>)</span></h3>
                    </div>
                    <div class="card-body">
                      <!-- Container for ECharts chart -->
                      <div id="chartLocation4" style="width: 40vw; height: 40vh;"></div>

                      <!-- Script to render the ECharts chart -->
                      <script>
                        $(document).ready(async () => {
                          try {
                            const response = await $.getJSON('/api/averagePercentagesByWeek/city-mosque');
                            const data = response;

                            // Use ECharts to render the chart
                            const chart = echarts.init(document.getElementById('chartLocation4'));
                            const weekNumbers = data.map(entry => entry.weekNumber);
                            const averagePercentages = data.map(entry => entry.averagePercentage);

                            // Define an array of colors for each bar
                            const barColors = ['#FF5733', '#33FF57', '#5733FF', '#FF33A1'];

                            const option = {
                              xAxis: {
                                type: 'category',
                                data: weekNumbers,
                                name: 'Week',
                              },
                              yAxis: {
                                type: 'value',
                                name: 'Average Percentage',
                                axisLabel: {
                                  interval: 0,
                                  rotate: 0, // Rotate yAxis labels if needed
                                  formatter: '{value}%', // Display yAxis labels in percentage format
                                },
                                axisLine: {
                                  show: false, // Hide yAxis line
                                },
                                splitLine: {
                                  show: false, // Hide grid lines for yAxis
                                },
                              },
                              series: [{
                                data: averagePercentages,
                                type: 'bar',
                                name: 'Average Percentage',
                                itemStyle: {
                                  color: (params) => barColors[params.dataIndex % barColors.length], // Set bar colors
                                },
                                label: {
                                  show: true,
                                  position: 'inside', // Display percentage labels inside the bars
                                  formatter: (params) => params.value.toFixed(1) + '%', // Format label as rounded-off percentage
                                  textStyle: {
                                    color: 'white', // Set font color for the labels
                                  },
                                },
                              }],
                              legend: {
                                data: ['Average Percentage'],
                                align: 'left', // Align the legend to the left
                                textStyle: {
                                  color: 'white', // Change the font color of the legend
                                },
                                show: false,
                              },
                            };

                            chart.setOption(option);
                          } catch (error) {
                            console.error('Error fetching data:', error);
                          }
                        });
                      </script>
                    </div>
                  </div>
                </div>
                <!-- Add more cards as needed for each item in the carousel -->
              </div>
            </div>

            <div class="carousel-item ">
              <div class="row g-3 mb-5 justify-content-center">
                <div class="col-12">
                  <div class="card p-4 vh-50">
                    <div class="card-title">
                      <h3>Raudhatul Sakinah Patrol Activity <span class="text-700 fs-1">(<%= previousMonth %>)</span></h3>
                    </div>
                    <div class="card-body">
                      <!-- Container for ECharts chart -->
                      <div id="chartLocation5" style="width: 40vw; height: 40vh;"></div>

                      <!-- Script to render the ECharts chart -->
                      <script>
                        $(document).ready(async () => {
                          try {
                            const response = await $.getJSON('/api/averagePercentagesByWeek/raudhatul-sakinah');
                            const data = response;

                            // Use ECharts to render the chart
                            const chart = echarts.init(document.getElementById('chartLocation5'));
                            const weekNumbers = data.map(entry => entry.weekNumber);
                            const averagePercentages = data.map(entry => entry.averagePercentage);

                            // Define an array of colors for each bar
                            const barColors = ['#FF5733', '#33FF57', '#5733FF', '#FF33A1'];

                            const option = {
                              xAxis: {
                                type: 'category',
                                data: weekNumbers,
                                name: 'Week',
                              },
                              yAxis: {
                                type: 'value',
                                name: 'Average Percentage',
                                axisLabel: {
                                  interval: 0,
                                  rotate: 0, // Rotate yAxis labels if needed
                                  formatter: '{value}%', // Display yAxis labels in percentage format
                                },
                                axisLine: {
                                  show: false, // Hide yAxis line
                                },
                                splitLine: {
                                  show: false, // Hide grid lines for yAxis
                                },
                              },
                              series: [{
                                data: averagePercentages,
                                type: 'bar',
                                name: 'Average Percentage',
                                itemStyle: {
                                  color: (params) => barColors[params.dataIndex % barColors.length], // Set bar colors
                                },
                                label: {
                                  show: true,
                                  position: 'inside', // Display percentage labels inside the bars
                                  formatter: (params) => params.value.toFixed(1) + '%', // Format label as rounded-off percentage
                                  textStyle: {
                                    color: 'white', // Set font color for the labels
                                  },
                                },
                              }],
                              legend: {
                                data: ['Average Percentage'],
                                align: 'left', // Align the legend to the left
                                textStyle: {
                                  color: 'white', // Change the font color of the legend
                                },
                                show: false,
                              },
                            };

                            chart.setOption(option);
                          } catch (error) {
                            console.error('Error fetching data:', error);
                          }
                        });
                      </script>
                    </div>
                  </div>
                </div>
                <!-- Add more cards as needed for each item in the carousel -->
              </div>
            </div>

          </div>

          <div class="carousel-indicators">
            <button type="button" data-bs-target="#myCarousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#myCarousel" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#myCarousel" data-bs-slide-to="2" aria-label="Slide 3"></button>
            <button type="button" data-bs-target="#myCarousel" data-bs-slide-to="3" aria-label="Slide 4"></button>
            <button type="button" data-bs-target="#myCarousel" data-bs-slide-to="4" aria-label="Slide 5"></button>
          </div>
        </div>
      </div>
    </div>

    <div class="col-12 col-xxl-6">
      <h3>Duty Handover Status</h3>
      <p class="text-700 fs-1">Status from <%= oneWeekAgo %> until <%= currentDate %></p>

      <div id="pieChart" style="height: 500px;"></div>

      <script>
        $(document).ready(async () => {
          try {
            const response = await $.getJSON('/api/dutyHandovers');
            const data = response;

            // Generate data for the pie chart
            const statusCounts = {
              'Completed': data.completedCount,
              'Incompleted': data.incompletedCount,
            };

            // Set bright colors for each status
            const statusColors = {
              'Completed': '#FF6F61', // Salmon
              'Incompleted': '#FFD700', // Dodger Blue
            };

            // Create pie chart options
            const chart = echarts.init(document.getElementById('pieChart'));
            const options = {
              tooltip: {
                trigger: 'item',
                formatter: '{a} <br/>{b} : {c} ({d}%)',
              },
              legend: {
                orient: 'vertical',
                left: 'left',
                data: Object.keys(statusCounts),
                textStyle: {
                  color: '#3874ff', // Change this to the desired legend font color
                },
              },
              series: [{
                name: 'Status',
                type: 'pie',
                radius: '70%', // Increase the size by adjusting the radius
                center: ['50%', '60%'],
                data: Object.entries(statusCounts).map(([key, value]) => ({
                  name: key,
                  value,
                  itemStyle: {
                    color: statusColors[key] || 'gray', // Set custom color or fallback to gray
                  },
                  label: {
                    show: false, // Hide labels
                  },
                  emphasis: {
                    label: {
                      show: false, // Hide labels on emphasis
                    },
                  },
                })),
              }, ],
            };

            // Set options and render the chart
            chart.setOption(options);
          } catch (error) {
            console.error('Error fetching data:', error);
          }
        });
      </script>
    </div>
  </div>

  <div class="row g-1 border border-300 rounded-3 p-4 mb-5">
    <div class="col-12 col-xxl-6 vh-50">
      <h3>Shift Member Patrol</h3>
      <p class="text-700 fs-1">Example</p>

      <!-- Container for ECharts chart -->
      <div id="chartShiftMember" style="width: 100%; height: 90%;"></div>

      <!-- Script to render the ECharts chart -->
      <script>
        $(document).ready(async () => {
          try {
            const response = await $.getJSON('/api/dashboard/shiftMember');
            const data = response;

            // Extract data for ECharts
            const xAxisData = data.map(item => `Week ${item.weekNumber}`);
            const seriesData = data.map(item => item.averagePercentage);

            // Initialize ECharts
            const myChart = echarts.init(document.getElementById('chartShiftMember'));

            // ECharts configuration
            const option = {
              tooltip: {
                trigger: 'axis',
                formatter: '{b}: {c}%'
              },
              xAxis: {
                type: 'category',
                data: xAxisData,
                name: 'Week'
              },
              yAxis: {
                type: 'value',
                name: 'Average Percentage (%)'
              },
              series: [{
                type: 'line',
                data: seriesData,
                label: {
                  show: true,
                  formatter: (params) => params.value.toFixed(1) + '%', // Format label as rounded-off percentage
                  textStyle: {
                    color: '#3874ff', // Set font color for the labels
                  },
                },
                lineStyle: {
                  color: 'y' // Change the color here
                }
              }]
            };

            // Set ECharts configuration
            myChart.setOption(option);

            chart.setOption(option);
          } catch (error) {
            console.error('Error fetching data:', error);
          }
        });
      </script>
    </div>

    <div class="col-12 col-xxl-6 vh-50">
      <h3>Patrol Unit</h3>
      <p class="text-700 fs-1">Example</p>

      <!-- Container for ECharts chart -->
      <div id="chartPatrolUnit" style="width: 100%; height: 90%;"></div>

      <!-- Script to render the ECharts chart -->
      <script>
        $(document).ready(async () => {
          try {
            const response = await $.getJSON('/api/dashboard/patrolUnit');
            const data = response;

            // Extract data for ECharts
            const xAxisData = data.map(item => `Week ${item.weekNumber}`);
            const seriesData = data.map(item => item.averagePercentage);

            // Initialize ECharts
            const myChart = echarts.init(document.getElementById('chartPatrolUnit'));

            // ECharts configuration
            const option = {
              tooltip: {
                trigger: 'axis',
                formatter: '{b}: {c}%'
              },
              xAxis: {
                type: 'category',
                data: xAxisData,
                name: 'Week'
              },
              yAxis: {
                type: 'value',
                name: 'Average Percentage (%)'
              },
              series: [{
                type: 'line',
                data: seriesData,
                label: {
                  show: true,
                  formatter: (params) => params.value.toFixed(1) + '%', // Format label as rounded-off percentage
                  textStyle: {
                    color: '#3874ff', // Set font color for the labels
                  },
                },
                lineStyle: {
                  color: 'y' // Change the color here
                }
              }]
            };

            // Set ECharts configuration
            myChart.setOption(option);

            chart.setOption(option);
          } catch (error) {
            console.error('Error fetching data:', error);
          }
        });
      </script>
    </div>

    <div class="col-12 vh-50">
      <h3>Case Report</h3>
      <p class="text-700 fs-1">Example</p>
    </div>
  </div>



</div>

<%- include("partials/navbar-script") %> <%- include("partials/footer") %>